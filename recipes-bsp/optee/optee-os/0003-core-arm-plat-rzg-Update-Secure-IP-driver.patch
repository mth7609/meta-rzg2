diff -uprN git_org/core/arch/arm/plat-rzg/conf.mk git_mod/core/arch/arm/plat-rzg/conf.mk
--- git_org/core/arch/arm/plat-rzg/conf.mk	2021-07-06 12:14:04.562595420 +0900
+++ git_mod/core/arch/arm/plat-rzg/conf.mk	2021-07-06 12:18:57.000000000 +0900
@@ -49,7 +49,7 @@ RZG_DRAM_ECC ?= 0
 RZG_ECC_FULL ?= 0
 
 CFG_RZG_SEC_IP_DRV ?= n
-+CFG_RZG_SEC_IP_RNG ?= n
+CFG_RZG_SEC_IP_RNG ?= n
 
 ifeq ($(CFG_RZG_SEC_IP_DRV),n)
 $(call force,CFG_RZG_SEC_IP_RNG,n)
diff -uprN git_org/core/arch/arm/plat-rzg/drivers/secip_drv.c git_mod/core/arch/arm/plat-rzg/drivers/secip_drv.c
--- git_org/core/arch/arm/plat-rzg/drivers/secip_drv.c	2021-07-06 12:14:04.562595420 +0900
+++ git_mod/core/arch/arm/plat-rzg/drivers/secip_drv.c	1970-01-01 09:00:00.000000000 +0900
@@ -1,76 +0,0 @@
-// SPDX-License-Identifier: BSD-2-Clause
-/*
- * Copyright (C) 2021 Renesas Electronics Corporation. All rights reserved.
- */
-
-#include <initcall.h>
-#include <io.h>
-#include <mm/core_memprot.h>
-#include <kernel/panic.h>
-
-#include "tsip/R_TSIP_Core_Lib.h"
-
-#define S_INST_DATA_ADDR    (0x440FE000)
-#define S_INST_DATA_SIZE    (0x2000)
-
-static uint8_t s_ram_data[480];
-vaddr_t s_inst_data = (vaddr_t)NULL;
-
-register_phys_mem_pgdir(MEM_AREA_IO_SEC, TSIP_BASE_ADDR, TSIP_SIZE);
-register_phys_mem_pgdir(MEM_AREA_IO_SEC, S_INST_DATA_ADDR, S_INST_DATA_SIZE);
-
-static uint32_t rng_cnt = 0;
-
-TEE_Result secip_rng(void *buf, size_t blen)
-{
-    uint32_t err;
-    
-    if(!buf){
-        EMSG("Invalid buffer");
-        return TEE_ERROR_BAD_PARAMETERS;
-    }
-
-    if (0 < blen) {
-		DMSG("R_TSIP_BCF_GenerateRandom Call %d", rng_cnt++);
-        err = R_TSIP_BCF_GenerateRandom(blen, 0, buf);
-        if (R_PASS != err) {
-            EMSG("Failed to generate a random number (0x%08x).", err);
-            return TEE_ERROR_GENERIC;
-        }
-		DMSG("R_TSIP_BCF_GenerateRandom Return %d", rng_cnt);
-    }
-
-    return TEE_SUCCESS;
-}
-
-static TEE_Result init_secip(void)
-{
-    uint32_t err;
-    vaddr_t tsip_base_address;
-    vaddr_t mstp_base_address;
-	uint8_t buf[4];
-
-    tsip_base_address = (vaddr_t)phys_to_virt_io(TSIP_BASE_ADDR);
-    mstp_base_address = (vaddr_t)phys_to_virt_io(MSTP_BASE_ADDR);
-
-    s_inst_data = (vaddr_t)phys_to_virt_io(S_INST_DATA_ADDR);
-
-    err = R_TSIP_Lib_Init((uint8_t *)s_ram_data, (uint8_t *)s_inst_data, 
-                          (uint8_t *)tsip_base_address, (uint8_t *)mstp_base_address);
-    if (R_PASS != err)
-    {
-        EMSG("Failed to initialize TSIP Library (0x%08x).", err);
-        panic();
-    }
-    
-	err = R_TSIP_BCF_GenerateRandom(4, 0, buf);
-	if (R_PASS != err) {
-		EMSG("Failed to generate a random number (0x%08x).", err);
-		return TEE_ERROR_GENERIC;
-	}
-	DMSG("Random value %02x %02x %02x %02x", buf[0],buf[1],buf[2],buf[3]);
-	
-    return TEE_SUCCESS;
-}
-
-driver_init(init_secip);
diff -uprN git_org/core/arch/arm/plat-rzg/drivers/sub.mk git_mod/core/arch/arm/plat-rzg/drivers/sub.mk
--- git_org/core/arch/arm/plat-rzg/drivers/sub.mk	2021-07-06 12:14:04.562595420 +0900
+++ git_mod/core/arch/arm/plat-rzg/drivers/sub.mk	2021-07-06 12:17:47.000000000 +0900
@@ -1,5 +1,5 @@
 
 ifeq ($(CFG_RZG_SEC_IP_DRV),y)
-srcs-y += secip_drv.c
+srcs-y += tsip_init.c
 subdirs-y += tsip
 endif
diff -uprN git_org/core/arch/arm/plat-rzg/drivers/tsip/core/TSIP_Core_Proc_API.c git_mod/core/arch/arm/plat-rzg/drivers/tsip/core/TSIP_Core_Proc_API.c
--- git_org/core/arch/arm/plat-rzg/drivers/tsip/core/TSIP_Core_Proc_API.c	2021-07-06 12:14:04.562595420 +0900
+++ git_mod/core/arch/arm/plat-rzg/drivers/tsip/core/TSIP_Core_Proc_API.c	2021-07-06 12:16:39.000000000 +0900
@@ -27,13 +27,13 @@
 #include "proc/TSIP_Procedure.h"
 #include "stub/TSIP_Stub_API.h"
 
-static unsigned char OutPut_S_INST[1296U];
+static uint32_t OutPut_S_INST[324U];
 
 /*! @var TSIP_Core_Share_InData_IV
     @brief IV for Keyring injection
 */
-static const uint8_t TSIP_Core_Share_InData_IV[] = {
-    0x85, 0xc1, 0x67, 0x34, 0x83, 0xd5, 0xd2, 0x91,  0xf0, 0xd0, 0x71, 0x3e,  0x3e, 0xa4, 0x34, 0xa3,
+static const uint32_t TSIP_Core_Share_InData_IV[] = {
+    0x3467c185, 0x91d2d583, 0x3e71d0f0, 0xa334a43e,
 };
 
 /*! *****************************************************************************
@@ -190,9 +190,9 @@ uint32_t TSIP_Core_Prc_p04(const uint32_
     uint32_t  InData_SharedKeyIndex[1];
     uint32_t  InData_SessionKey[8];
     uint32_t  i;
-    uint8_t   *workp;
+    uint32_t   *workp;
     
-    for(i = 0; i < sizeof(OutPut_S_INST); i++) {
+    for(i = 0; i < (sizeof(OutPut_S_INST))/4; i++) {
         OutPut_S_INST[i] = 0U;
     }
     InData_SharedKeyIndex[0] = InData_CustomerKeyOperationCode[0];
@@ -202,8 +202,8 @@ uint32_t TSIP_Core_Prc_p04(const uint32_
     Ret = TSIPPrc_p04(InData_SharedKeyIndex, InData_SessionKey, (const uint32_t *)TSIP_Core_Share_InData_IV, InData_KeyRingOperationCode, (uint32_t *)OutPut_S_INST);  /* PRQA S 3305 */
     if(Ret == RETURN_OK) {
         RetCode = R_PASS;
-        workp = (uint8_t *)S_INST;
-        for(i = 0; i < sizeof(OutPut_S_INST); i++) {
+        workp = (uint32_t *)S_INST;
+        for(i = 0; i < (sizeof(OutPut_S_INST))/4; i++) {
              workp[i] = OutPut_S_INST[i];
         }
     }
diff -uprN git_org/core/arch/arm/plat-rzg/drivers/tsip/R_TSIP_Core_Lib.h git_mod/core/arch/arm/plat-rzg/drivers/tsip/R_TSIP_Core_Lib.h
--- git_org/core/arch/arm/plat-rzg/drivers/tsip/R_TSIP_Core_Lib.h	2021-07-06 12:14:04.562595420 +0900
+++ git_mod/core/arch/arm/plat-rzg/drivers/tsip/R_TSIP_Core_Lib.h	1970-01-01 09:00:00.000000000 +0900
@@ -1,83 +0,0 @@
-/*
- * Copyright (c) 2020, Renesas Electronics Corporation. All rights reserved.
- *
- * SPDX-License-Identifier: BSD-3-Clause
- */
-
-/*! *****************************************************************************
-    @file    R_TSIP_Core_Lib.h
-    @brief   TSIP Security Driver Core Library API(Linux)
-    
-    @par    History
-    @subsection sub_history 
-      - Initial version\n
- ********************************************************************************/
-
-#ifndef  R_TSIP_CORE_LIB_H_
-#define  R_TSIP_CORE_LIB_H_
-
-/* Define */
-#define R_PASS                       (0x00000000)
-#define R_INITIALIZATION_FAIL        (0x00000001)
-#define R_PARAMETER_FAIL             (0x00000002)
-#define R_SEQUENCE_FAIL              (0x00000003)
-#define R_RESOURCE_CONFLICT_FAIL     (0x00000004)
-#define R_VERIFICATION_FAIL          (0x00000005)
-#define R_SERVERMESSAGE_FAIL         (0x00000006)
-#define R_SERVER_VERIFICATION_FAIL   (0x00000007)
-#define R_ROOTCA_CERTIFICATION_FAIL  (0x00000008)
-#define R_USEKEY_FAIL                (0x00000009)
-#define R_CONNECTSESSION_FAIL        (0x0000000A)
-#define R_INDATA_OUTDATA_ACCESS_FAIL (0x0000000B)
-#define R_PROVISIONING_KEY_FAIL      (0x0000000C)
-#define R_GENERATION_FAIL            (0x0000000D)
-#define R_KEYRING_FORMAT_FAIL        (0x0000000E)
-#define R_ALLOCATE_MEMORY_FAIL       (0x00000020)
-#define R_MMAP_FAIL                  (0x00000021)
-#define R_FALSIFICATION_ERROR        (0x00000022)
-#define R_INITIALIZATION_ERROR       (0x00000080)
-
-/* MSTP Base Address and size */
-#define  MSTP_BASE_ADDR             (0xE6150000U)
-#define  MSTP_SIZE                  (0x00001000U)
-/* TSIP Base Address and size */
-#define  TSIP_BASE_ADDR             (0xE7800000U)
-#define  TSIP_SIZE                  (0x00000200U)
-
-#define UPDATE_BOOT_DATA_MAX             (16)
-
-/* typedef */
-typedef struct str_tsip_update_boot_data {
-    unsigned long InData_BootData_UpdateFlag;
-    unsigned char *InData_BootData;
-    unsigned long InData_BootData_ByteSize;
-    unsigned char *OutData_BootData;
-} TSIP_UPDATE_BOOT_DATA[UPDATE_BOOT_DATA_MAX];
-
-
-/* API */
-/*                             */
-/*  TSIP Library Initial API   */
-/*                             */
-unsigned long R_TSIP_Lib_Init(unsigned char *S_RAMData, unsigned char *S_INSTData, unsigned char *TSIP_BaseAddress, unsigned char *MSTP_BaseAddress);
-
-
-/*                           */
-/*  TSIP Secure Update API   */
-/*                           */
-unsigned long R_TSIP_SU_Activate(void);
-unsigned long R_TSIP_UpdateBootData(TSIP_UPDATE_BOOT_DATA *tsip_update_bootdata);
-unsigned long R_TSIP_SU_Key(unsigned char *InData_KeyRingOperationCode);
-
-
-/*                          */
-/*  TSIP Basic Encrypt API  */
-/*                          */
-unsigned long R_TSIP_BCF_GenerateRandom(
-    unsigned long InData_GenByteSize,
-    unsigned long InData_UseCASE,
-    unsigned char *OutData);
-
-
-
-#endif  /* R_TSIP_CORE_LIB_H_ */
diff -uprN git_org/core/arch/arm/plat-rzg/drivers/tsip_init.c git_mod/core/arch/arm/plat-rzg/drivers/tsip_init.c
--- git_org/core/arch/arm/plat-rzg/drivers/tsip_init.c	1970-01-01 09:00:00.000000000 +0900
+++ git_mod/core/arch/arm/plat-rzg/drivers/tsip_init.c	2021-07-05 15:20:06.000000000 +0900
@@ -0,0 +1,40 @@
+// SPDX-License-Identifier: BSD-2-Clause
+/*
+ * Copyright (C) 2021 Renesas Electronics Corporation. All rights reserved.
+ */
+
+#include <initcall.h>
+#include <io.h>
+#include <mm/core_memprot.h>
+#include <kernel/panic.h>
+
+#include "drivers/tsip/R_TSIP_Core_Lib.h"
+
+#define S_INST_DATA_ADDR    (0x440FE000)
+
+static uint32_t s_ram_data[120];
+vaddr_t s_inst_data = (vaddr_t)NULL;
+
+static TEE_Result init_tsip(void)
+{
+    uint32_t err;
+    vaddr_t tsip_base_address;
+    vaddr_t mstp_base_address;
+
+    tsip_base_address = (vaddr_t)phys_to_virt_io(TSIP_BASE_ADDR);
+    mstp_base_address = (vaddr_t)phys_to_virt_io(MSTP_BASE_ADDR);
+
+    s_inst_data = (vaddr_t)phys_to_virt_io(S_INST_DATA_ADDR);
+
+    err = R_TSIP_Lib_Init((uint8_t *)s_ram_data, (uint8_t *)s_inst_data, 
+                          (uint8_t *)tsip_base_address, (uint8_t *)mstp_base_address);
+    if (R_PASS != err)
+    {
+        EMSG("Failed to initialize TSIP Library (0x%08x).", err);
+        panic();
+    }
+
+    return TEE_SUCCESS;
+}
+
+driver_init(init_tsip);
diff -uprN git_org/core/arch/arm/plat-rzg/include/drivers/secip_drv.h git_mod/core/arch/arm/plat-rzg/include/drivers/secip_drv.h
--- git_org/core/arch/arm/plat-rzg/include/drivers/secip_drv.h	2021-07-06 12:14:04.562595420 +0900
+++ git_mod/core/arch/arm/plat-rzg/include/drivers/secip_drv.h	1970-01-01 09:00:00.000000000 +0900
@@ -1,12 +0,0 @@
-// SPDX-License-Identifier: BSD-2-Clause
-/*
- * Copyright (C) 2021 Renesas Electronics Corporation. All rights reserved.
- */
-
-#ifndef SECIP_DRV_H
-#define SECIP_DRV_H
-
-/* Random Number Generator */
-TEE_Result secip_rng(void *buf, size_t blen);
-
-#endif
diff -uprN git_org/core/arch/arm/plat-rzg/include/drivers/tsip/R_TSIP_Core_Lib.h git_mod/core/arch/arm/plat-rzg/include/drivers/tsip/R_TSIP_Core_Lib.h
--- git_org/core/arch/arm/plat-rzg/include/drivers/tsip/R_TSIP_Core_Lib.h	1970-01-01 09:00:00.000000000 +0900
+++ git_mod/core/arch/arm/plat-rzg/include/drivers/tsip/R_TSIP_Core_Lib.h	2021-07-05 15:20:06.000000000 +0900
@@ -0,0 +1,83 @@
+/*
+ * Copyright (c) 2020, Renesas Electronics Corporation. All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+/*! *****************************************************************************
+    @file    R_TSIP_Core_Lib.h
+    @brief   TSIP Security Driver Core Library API(Linux)
+    
+    @par    History
+    @subsection sub_history 
+      - Initial version\n
+ ********************************************************************************/
+
+#ifndef  R_TSIP_CORE_LIB_H_
+#define  R_TSIP_CORE_LIB_H_
+
+/* Define */
+#define R_PASS                       (0x00000000)
+#define R_INITIALIZATION_FAIL        (0x00000001)
+#define R_PARAMETER_FAIL             (0x00000002)
+#define R_SEQUENCE_FAIL              (0x00000003)
+#define R_RESOURCE_CONFLICT_FAIL     (0x00000004)
+#define R_VERIFICATION_FAIL          (0x00000005)
+#define R_SERVERMESSAGE_FAIL         (0x00000006)
+#define R_SERVER_VERIFICATION_FAIL   (0x00000007)
+#define R_ROOTCA_CERTIFICATION_FAIL  (0x00000008)
+#define R_USEKEY_FAIL                (0x00000009)
+#define R_CONNECTSESSION_FAIL        (0x0000000A)
+#define R_INDATA_OUTDATA_ACCESS_FAIL (0x0000000B)
+#define R_PROVISIONING_KEY_FAIL      (0x0000000C)
+#define R_GENERATION_FAIL            (0x0000000D)
+#define R_KEYRING_FORMAT_FAIL        (0x0000000E)
+#define R_ALLOCATE_MEMORY_FAIL       (0x00000020)
+#define R_MMAP_FAIL                  (0x00000021)
+#define R_FALSIFICATION_ERROR        (0x00000022)
+#define R_INITIALIZATION_ERROR       (0x00000080)
+
+/* MSTP Base Address and size */
+#define  MSTP_BASE_ADDR             (0xE6150000U)
+#define  MSTP_SIZE                  (0x00001000U)
+/* TSIP Base Address and size */
+#define  TSIP_BASE_ADDR             (0xE7800000U)
+#define  TSIP_SIZE                  (0x00000200U)
+
+#define UPDATE_BOOT_DATA_MAX             (16)
+
+/* typedef */
+typedef struct str_tsip_update_boot_data {
+    unsigned long InData_BootData_UpdateFlag;
+    unsigned char *InData_BootData;
+    unsigned long InData_BootData_ByteSize;
+    unsigned char *OutData_BootData;
+} TSIP_UPDATE_BOOT_DATA[UPDATE_BOOT_DATA_MAX];
+
+
+/* API */
+/*                             */
+/*  TSIP Library Initial API   */
+/*                             */
+unsigned long R_TSIP_Lib_Init(unsigned char *S_RAMData, unsigned char *S_INSTData, unsigned char *TSIP_BaseAddress, unsigned char *MSTP_BaseAddress);
+
+
+/*                           */
+/*  TSIP Secure Update API   */
+/*                           */
+unsigned long R_TSIP_SU_Activate(void);
+unsigned long R_TSIP_UpdateBootData(TSIP_UPDATE_BOOT_DATA *tsip_update_bootdata);
+unsigned long R_TSIP_SU_Key(unsigned char *InData_KeyRingOperationCode);
+
+
+/*                          */
+/*  TSIP Basic Encrypt API  */
+/*                          */
+unsigned long R_TSIP_BCF_GenerateRandom(
+    unsigned long InData_GenByteSize,
+    unsigned long InData_UseCASE,
+    unsigned char *OutData);
+
+
+
+#endif  /* R_TSIP_CORE_LIB_H_ */
diff -uprN git_org/core/arch/arm/plat-rzg/main.c git_mod/core/arch/arm/plat-rzg/main.c
--- git_org/core/arch/arm/plat-rzg/main.c	2021-07-06 12:14:04.562595420 +0900
+++ git_mod/core/arch/arm/plat-rzg/main.c	2021-06-23 16:02:31.000000000 +0900
@@ -27,6 +27,11 @@ register_phys_mem_pgdir(MEM_AREA_IO_SEC,
 register_phys_mem_pgdir(MEM_AREA_IO_SEC, GICD_BASE, GIC_DIST_REG_SIZE);
 register_phys_mem_pgdir(MEM_AREA_IO_SEC, GICC_BASE, GIC_DIST_REG_SIZE);
 
+#if defined(CFG_RZG_SEC_IP_DRV)
+register_phys_mem_pgdir(MEM_AREA_IO_SEC, TSIP_BASE_ADDR, TSIP_SIZE);
+register_phys_mem_pgdir(MEM_AREA_IO_SEC, S_INST_DATA_ADDR, S_INST_DATA_SIZE);
+#endif
+
 register_dynamic_shm(NSEC_DDR_0_BASE, NSEC_DDR_0_SIZE);
 #ifdef NSEC_DDR_1_BASE
 register_dynamic_shm(NSEC_DDR_1_BASE, NSEC_DDR_1_SIZE);
diff -uprN git_org/core/arch/arm/plat-rzg/platform_config.h git_mod/core/arch/arm/plat-rzg/platform_config.h
--- git_org/core/arch/arm/plat-rzg/platform_config.h	2021-07-06 12:14:04.562595420 +0900
+++ git_mod/core/arch/arm/plat-rzg/platform_config.h	2021-06-23 16:02:48.000000000 +0900
@@ -19,6 +19,11 @@
 #define GICC_BASE		0xF1020000
 #define GICD_BASE		0xF1010000
 
+#define S_INST_DATA_ADDR	0x440FE000
+#define S_INST_DATA_SIZE	0x00002000
+#define TSIP_BASE_ADDR		0xE7800000
+#define TSIP_SIZE			0x00000200
+
 #define CONSOLE_UART_BASE	0xE6E88000
 
 #define TEE_SHMEM_START		(TZDRAM_BASE + TZDRAM_SIZE)
diff -uprN git_org/core/arch/arm/plat-rzg/rzg_rng.c git_mod/core/arch/arm/plat-rzg/rzg_rng.c
--- git_org/core/arch/arm/plat-rzg/rzg_rng.c	2021-07-06 12:14:04.562595420 +0900
+++ git_mod/core/arch/arm/plat-rzg/rzg_rng.c	2021-06-23 14:39:27.000000000 +0900
@@ -4,6 +4,7 @@
  * Copyright (c) 2021, Renesas Electronics Corporation
  */
 
+#include <trace.h>
 #include <compiler.h>
 #include <crypto/crypto.h>
 #include <rng_support.h>
@@ -12,16 +13,28 @@
 
 #include <string.h>
 
-#include "drivers/secip_drv.h"
+#include "drivers/tsip/R_TSIP_Core_Lib.h" 
 
 TEE_Result crypto_rng_read(void *buf, size_t blen)
-{
-    if (!buf)
+{ 
+    uint32_t err;
+
+    if(!buf){
+        EMSG("Invalid buffer");
         return TEE_ERROR_BAD_PARAMETERS;
+    }
 
     memset(buf, 0, blen);
 
-    return secip_rng(buf, blen);
+    if (0 < blen) {
+        err = R_TSIP_BCF_GenerateRandom(blen, 0, buf);
+        if (R_PASS != err) {
+            EMSG("Failed to generate a random number (0x%08x).", err);
+            return TEE_ERROR_GENERIC;
+        }
+    }
+
+    return TEE_SUCCESS;
 }
 
 uint8_t hw_get_random_byte(void)
